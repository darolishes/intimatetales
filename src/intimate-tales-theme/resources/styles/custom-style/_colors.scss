@use '../base' as *;

// --------------------------------

// (START) Global editor code https://codyhouse.co/ds/globals/colors

// --------------------------------

:root, [data-theme="default"] {
  // main
  @include defineColorHSL(--color-primary-darker, 264, 68%, 29%);
  @include defineColorHSL(--color-primary-dark, 264, 68%, 35%);
  @include defineColorHSL(--color-primary, 264, 68%, 41%);
  @include defineColorHSL(--color-primary-light, 264, 68%, 47%);
  @include defineColorHSL(--color-primary-lighter, 264, 68%, 53%);

  @include defineColorHSL(--color-accent-darker, 354, 80%, 52%);
  @include defineColorHSL(--color-accent-dark, 354, 90%, 58%);
  @include defineColorHSL(--color-accent, 354, 100%, 64%);
  @include defineColorHSL(--color-accent-light, 354, 100%, 69%);
  @include defineColorHSL(--color-accent-lighter, 354, 100%, 73%);

  @include defineColorHSL(--color-secondary-darker, 29, 31%, 41%);
  @include defineColorHSL(--color-secondary-dark, 29, 31%, 45%);
  @include defineColorHSL(--color-secondary, 29, 31%, 50%);
  @include defineColorHSL(--color-secondary-light, 29, 31%, 56%);
  @include defineColorHSL(--color-secondary-lighter, 29, 31%, 62%);

  @include defineColorHSL(--color-black, 265, 68%, 5%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 35, 79%, 48%);
  @include defineColorHSL(--color-warning-dark, 35, 79%, 56%);
  @include defineColorHSL(--color-warning, 35, 79%, 66%);
  @include defineColorHSL(--color-warning-light, 35, 79%, 74%);
  @include defineColorHSL(--color-warning-lighter, 35, 79%, 82%);

  @include defineColorHSL(--color-success-darker, 154, 75%, 40%);
  @include defineColorHSL(--color-success-dark, 154, 70%, 44%);
  @include defineColorHSL(--color-success, 154, 66%, 48%);
  @include defineColorHSL(--color-success-light, 154, 62%, 57%);
  @include defineColorHSL(--color-success-lighter, 154, 58%, 67%);

  @include defineColorHSL(--color-error-darker, 354, 100%, 52%);
  @include defineColorHSL(--color-error-dark, 354, 100%, 58%);
  @include defineColorHSL(--color-error, 354, 100%, 64%);
  @include defineColorHSL(--color-error-light, 354, 100%, 69%);
  @include defineColorHSL(--color-error-lighter, 354, 100%, 73%);

  // background
  @include defineColorHSL(--color-bg-darker, 240, 2%, 89%);
  @include defineColorHSL(--color-bg-dark, 240, 3%, 94%);
  @include defineColorHSL(--color-bg, 0, 0%, 100%);
  @include defineColorHSL(--color-bg-light, 240, 3%, 100%);
  @include defineColorHSL(--color-bg-lighter, 240, 2%, 100%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 270, 2%, 84%);
  @include defineColorHSL(--color-contrast-low, 252, 3%, 63%);
  @include defineColorHSL(--color-contrast-medium, 262, 4%, 45%);
  @include defineColorHSL(--color-contrast-high, 258, 10%, 20%);
  @include defineColorHSL(--color-contrast-higher, 265, 68%, 5%);

  // gradients
  @include defineColorHSL(--gradient-primary-stop-1, 264, 68%, 41%);
  @include defineColorHSL(--gradient-primary-stop-2, 314, 68%, 41%);
}

[data-theme="dark"] {
  // main
  @include defineColorHSL(--color-primary-darker, 264, 90%, 52%);
  @include defineColorHSL(--color-primary-dark, 264, 95%, 57%);
  @include defineColorHSL(--color-primary, 264, 100%, 62%);
  @include defineColorHSL(--color-primary-light, 264, 100%, 66%);
  @include defineColorHSL(--color-primary-lighter, 264, 100%, 70%);

  @include defineColorHSL(--color-accent-darker, 354, 80%, 52%);
  @include defineColorHSL(--color-accent-dark, 354, 90%, 58%);
  @include defineColorHSL(--color-accent, 354, 100%, 64%);
  @include defineColorHSL(--color-accent-light, 354, 100%, 69%);
  @include defineColorHSL(--color-accent-lighter, 354, 100%, 73%);

  @include defineColorHSL(--color-secondary-darker, 29, 31%, 41%);
  @include defineColorHSL(--color-secondary-dark, 29, 31%, 45%);
  @include defineColorHSL(--color-secondary, 29, 31%, 50%);
  @include defineColorHSL(--color-secondary-light, 29, 31%, 56%);
  @include defineColorHSL(--color-secondary-lighter, 29, 31%, 62%);

  @include defineColorHSL(--color-black, 265, 68%, 5%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 35, 79%, 48%);
  @include defineColorHSL(--color-warning-dark, 35, 79%, 56%);
  @include defineColorHSL(--color-warning, 35, 79%, 66%);
  @include defineColorHSL(--color-warning-light, 35, 79%, 74%);
  @include defineColorHSL(--color-warning-lighter, 35, 79%, 82%);

  @include defineColorHSL(--color-success-darker, 154, 75%, 40%);
  @include defineColorHSL(--color-success-dark, 154, 70%, 44%);
  @include defineColorHSL(--color-success, 154, 66%, 48%);
  @include defineColorHSL(--color-success-light, 154, 62%, 57%);
  @include defineColorHSL(--color-success-lighter, 154, 58%, 67%);

  @include defineColorHSL(--color-error-darker, 354, 100%, 52%);
  @include defineColorHSL(--color-error-dark, 354, 100%, 58%);
  @include defineColorHSL(--color-error, 354, 100%, 64%);
  @include defineColorHSL(--color-error-light, 354, 100%, 69%);
  @include defineColorHSL(--color-error-lighter, 354, 100%, 73%);

  // background
  @include defineColorHSL(--color-bg-darker, 270, 8%, 6%);
  @include defineColorHSL(--color-bg-dark, 270, 9%, 9%);
  @include defineColorHSL(--color-bg, 270, 12%, 13%);
  @include defineColorHSL(--color-bg-light, 270, 9%, 17%);
  @include defineColorHSL(--color-bg-lighter, 270, 8%, 20%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 273, 7%, 24%);
  @include defineColorHSL(--color-contrast-low, 273, 4%, 39%);
  @include defineColorHSL(--color-contrast-medium, 264, 4%, 56%);
  @include defineColorHSL(--color-contrast-high, 270, 10%, 81%);
  @include defineColorHSL(--color-contrast-higher, 264, 100%, 98%);

  // gradients
  @include defineColorHSL(--gradient-primary-stop-1, 264, 100%, 62%);
  @include defineColorHSL(--gradient-primary-stop-2, 314, 100%, 62%);

  // font rendering
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// background color
.bg-secondary-darker { background-color: alpha(var(--color-secondary-darker), var(--bg-o, 1)); }
.bg-secondary-dark { background-color: alpha(var(--color-secondary-dark), var(--bg-o, 1)); }
.bg-secondary { background-color: alpha(var(--color-secondary), var(--bg-o, 1)); }
.bg-secondary-light { background-color: alpha(var(--color-secondary-light), var(--bg-o, 1)); }
.bg-secondary-lighter { background-color: alpha(var(--color-secondary-lighter), var(--bg-o, 1)); }

// background gradient
.bg-gradient-primary { background-image: radial-gradient(var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)); }
.bg-gradient-primary-top { background-image: linear-gradient(0deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)); }
.bg-gradient-primary-right { background-image: linear-gradient(90deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)); }
.bg-gradient-primary-bottom { background-image: linear-gradient(180deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)); }
.bg-gradient-primary-left { background-image: linear-gradient(270deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)); }

// border gradient
.border-gradient-primary { border-image: radial-gradient(var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1; }
.border-gradient-primary-top { border-image: linear-gradient(0deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1; }
.border-gradient-primary-right { border-image: linear-gradient(90deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1; }
.border-gradient-primary-bottom { border-image: linear-gradient(180deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1; }
.border-gradient-primary-left { border-image: linear-gradient(270deg, var(--gradient-primary-stop-1), var(--gradient-primary-stop-2)) 1; }

// border color
.border-secondary-darker { border-color: alpha(var(--color-secondary-darker), var(--bg-o, 1)); }
.border-secondary-dark { border-color: alpha(var(--color-secondary-dark), var(--bg-o, 1)); }
.border-secondary { border-color: alpha(var(--color-secondary), var(--bg-o, 1)); }
.border-secondary-light { border-color: alpha(var(--color-secondary-light), var(--bg-o, 1)); }
.border-secondary-lighter { border-color: alpha(var(--color-secondary-lighter), var(--bg-o, 1)); }

// --------------------------------

// (END) Global editor code

// --------------------------------